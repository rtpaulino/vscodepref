{
/*
	 // Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and
	 // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	 // $1, $2 for tab stops, ${id} and ${id:label} and ${1:label} for variables. Variables with the same id are connected.
	 // Example:
	 "Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	 "new Promise": {
		 "prefix": "newprom",
		 "body": [
			 "return new Promise((resolve, reject) => {",
			 "    $1",
			 "});"
		 ],
		 "description": "Create a new promise"
	 },
	 "Node Callback Function": {
		 "prefix": "cb",
		 "body": [
			 "(err, $1) => {",
			 "    if (err) {",
			 "        return reject(err);",
			 "    }",
			 "    return $1",
			 "}"
		 ]
	 },
	 "New Module Template": {
		 "prefix": "newmod",
		 "body": [
			"/*global module*/",
			"'use strict';",
			"",
			"$1",
			"",
			"module.exports = {};"
		 ]
	},
	 "New Class": {
		 "prefix": "newclass",
		 "body": [
			"/*global module*/",
			"'use strict';",
			"",
			"const _ = require('lodash');",
			"",
			"class $1 {",
			"    constructor() {",
			"        //_.bindAll(this, '');",
			"    }",
			"}",
			"",
			"module.exports = $1;"
		 ]
	 }
}
